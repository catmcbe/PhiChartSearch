name: Build & Release Multi-Platform Binaries

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号（例如：v1.0.0）'
        required: true
        type: string
      publish_release:
        description: '是否发布到GitHub Releases'
        required: true
        type: boolean
        default: false

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            system: linux
            ext: ''
            asset-name: PhiChartSearch_${{ github.event.inputs.version }}_linux_x64
          - os: windows-latest
            system: windows
            ext: '.exe'
            asset-name: PhiChartSearch_${{ github.event.inputs.version }}_windows_x64.exe
      fail-fast: false  # 一个平台失败不影响另一个

    steps:
    - uses: actions/checkout@v4  # 检出代码（包含release.md）

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Check font file (Linux)
      run: |
        if [ -f "Source Han Sans & Saira Hybrid-Regular #2934.ttf" ]; then
          echo "Font file found"
        else
          echo "Error: Font file not found!" && exit 1
        fi
      if: matrix.os == 'ubuntu-latest'
      shell: bash

    - name: Check font file (Windows)
      run: |
        if exist "Source Han Sans & Saira Hybrid-Regular #2934.ttf" (
          echo Font file found
        ) else (
          echo Error: Font file not found! && exit 1
        )
      if: matrix.os == 'windows-latest'
      shell: cmd

    - name: Build & rename (Linux)
      run: |
        pyinstaller --onefile --windowed --name="PhiChartSearch" \
          --add-data "Source Han Sans & Saira Hybrid-Regular #2934.ttf:." \
          ChartAnalyzer.py
        mv dist/PhiChartSearch "dist/${{ matrix.asset-name }}"
      if: matrix.os == 'ubuntu-latest'
      shell: bash

    - name: Build & rename (Windows)
      run: |
        pyinstaller --onefile --windowed --name="PhiChartSearch" ^
          --add-data "Source Han Sans & Saira Hybrid-Regular #2934.ttf;." ^
          ChartAnalyzer.py
        ren "dist\PhiChartSearch.exe" "${{ matrix.asset-name }}"
      if: matrix.os == 'windows-latest'
      shell: cmd

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset-name }}
        path: dist/${{ matrix.asset-name }}
        if-no-files-found: error

  release:
    needs: build
    if: ${{ github.event.inputs.publish_release == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 授予发布权限

    steps:
      - name: Checkout code (to get release.md)
        uses: actions/checkout@v4

      - name: Read release notes from release.md
        id: release_notes
        run: |
          # 读取release.md内容并处理换行符（适配GitHub Release格式）
          NOTES=$(cat release.md | sed ':a;N;$!ba;s/\n/%0A/g')
          echo "notes=$NOTES" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: ${{ steps.release_notes.outputs.notes }}  # 使用release.md内容作为描述
          files: |
            artifacts/PhiChartSearch_${{ github.event.inputs.version }}_linux_x64/PhiChartSearch_${{ github.event.inputs.version }}_linux_x64
            artifacts/PhiChartSearch_${{ github.event.inputs.version }}_windows_x64.exe/PhiChartSearch_${{ github.event.inputs.version }}_windows_x64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}